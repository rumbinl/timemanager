if (APPLE)
	add_library(SDL3 STATIC IMPORTED) 
	set_property(TARGET SDL3 PROPERTY IMPORTED_LOCATION /usr/local/lib/libSDL3.dylib)
	add_library(skia STATIC IMPORTED)
	set_property(TARGET skia PROPERTY IMPORTED_LOCATION /usr/local/lib/libskia.a)
	find_library(COCOA_LIBRARY Cocoa)
	add_library(sqlite3 STATIC IMPORTED)
	set_property(TARGET sqlite3 PROPERTY IMPORTED_LOCATION /usr/local/lib/sqlite3.o)
    add_library(duckx STATIC IMPORTED)
	set_property(TARGET duckx PROPERTY IMPORTED_LOCATION /usr/local/lib/libduckx.a)
endif (APPLE)

target_link_libraries(Timeman skia SDL3 sqlite3 duckx)

if (APPLE)
	target_link_libraries(Timeman ${COCOA_LIBRARY})
endif (APPLE)

if (WIN32)
	target_link_libraries(Timeman user32 opengl32)
endif (WIN32)

file(GLOB cpp_files "${CMAKE_CURRENT_SOURCE_DIR}/*.cpp")
foreach(file ${cpp_files})
    get_filename_component(libName ${file} NAME_WE)
    message("${file} ${libName}")
    list(APPEND ObjectList ${libName})
    add_library(${libName} STATIC ${file})
    set_property(TARGET ${libName} PROPERTY MSVC_RUNTIME_LIBRARY "MultiThreaded")
endforeach()

file(GLOB c_files "${CMAKE_CURRENT_SOURCE_DIR}/*.c")
foreach(file ${c_files})
    get_filename_component(libName ${file} NAME_WE)
    list(APPEND ObjectList ${libName})
    add_library(${libName} STATIC ${file})
    set_property(TARGET ${libName} PROPERTY MSVC_RUNTIME_LIBRARY "MultiThreaded")
endforeach()

list(GET ObjectList 0 ObjectListItem)
message("${ObjectListItem}")
target_link_libraries(Timeman ${ObjectList})